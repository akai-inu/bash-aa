// Generated by CoffeeScript 1.9.3
var ColorCalculator, async,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

async = require('async');

ColorCalculator = (function() {
  function ColorCalculator() {
    this.calc = bind(this.calc, this);
    this.init = bind(this.init, this);
  }

  ColorCalculator.prototype.init = function(colorData) {
    this.colorData = colorData;
  };

  ColorCalculator.prototype.calc = function(pixel, next) {
    return async.reduce(this.colorData, {
      id: -1,
      diff: 9999999
    }, function(memo, item, callback) {
      var bDiff, diff, gDiff, rDiff;
      rDiff = Math.abs(item.r - pixel.r);
      gDiff = Math.abs(item.g - pixel.g);
      bDiff = Math.abs(item.b - pixel.b);
      diff = (rDiff + gDiff + bDiff) / 3;
      if (memo.diff > diff) {
        memo = {
          id: item.id,
          diff: diff,
          color: item
        };
      }
      return callback(null, memo);
    }, next);
  };

  return ColorCalculator;

})();

module.exports = new ColorCalculator();
